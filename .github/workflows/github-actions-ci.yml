name: ci-action

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'main'
      - 'release/**'

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-tests:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Setup .Net
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarScanner
        run: dotnet tool install dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"andrebarsotti_generic-config-sample-api" /o:"andrebarsotti" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/covarage.*.xml"
          dotnet restore --force --no-cache
          dotnet build --no-restore 
          dotnet test --no-build --filter FullyQualifiedName\!~RepositoryTest --collect:"XPlat Code Coverage"
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
